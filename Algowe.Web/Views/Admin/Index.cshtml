@model IEnumerable<Algowe.Web.Models.CreateUserModel>


@helper Truncate(string input, int length)
    {
if (input.Length <= length)
{
        @input
}
else {
        @input.Substring(0, length)<text>...</text>
}
}
@{var roles = Model.First().GetRoles(User.IsInRole(Algowe.Web.Global.AConst.RoleSuperAdmin)); }

    <h2>Admin Page</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.User.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User.Email)
            </th>
            @foreach (var item in roles)
            {
                <th>
                    @Html.DisplayFor(model => item.Role.Name)
                </th>
            }
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.User.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.Email)
                </td>
                @foreach (var item2 in roles)
                { 
                    string s = item.User.InRoles(item2.Role.Name) ? "True" : "False";
                    <td>
                        @Html.DisplayFor(modelItem => s)
                    </td>
                }
                <td>
                    <!--@Html.ActionLink("Edit", "Edit", new { id = item.User.Id }) |-->
                    @Html.ActionLink("Details", "Details", new { id = item.User.Id }) 
                    @if (User.Identity.Name != item.User.Name && Model.Count() > 1)
                    { 
                        <text>| </text>
                        @Html.ActionLink("Delete", "Delete", "Admin", new { id = item.User.Id }, null)
                    }
                </td>
            </tr>
        }

    </table>
